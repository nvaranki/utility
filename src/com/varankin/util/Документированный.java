package com.varankin.util;

import java.util.*;

/**
 * Обладатель текстовой информации об объекте.
 *
 * @author &copy; 2012 Николай Варанкин
 */
public interface Документированный 
{
    /**
     * @param детализация уровень детальности информации об объекте, 
     *          в диапазоне от 0 (наиболее кратко) и выше (более подробно).
     * @return текстовую информацию об объекте.
     * @see Документированный.Детализация
     */
    String текст( int детализация );

    /**
     * @param группа      группа отбора информации об объекте.
     * @param разделитель пробел между информационными элементами.
     * @return объединенную текстовую информацию об объекте, 
     *  в порядке увеличения уровня детальности элементов.
     */
    String текст( Детализация группа, String разделитель );
    
    /**
     * Предопределенные уровни детализации.
     */
    public enum Детализация
    {
        НАЗВАНИЕ( 0 ),
        ОПИСАНИЕ( 1 ),
        СПЕЦИФИКАЦИЯ( 100 ),
        АННОТАЦИЯ( 1000 );

        private final int уровень;

        private Детализация( int уровень )
        {
            this.уровень = уровень;
        }

        /**
         * @return уровень детализации.
         */
        public final int уровень()
        {
            return уровень;
        }
        
        /**
         * @param уровень исходный уровень.
         * @return эквивалентный уровень из числа предопределенных.
         */
        static public Детализация valueOf( int уровень )
        {
            List<Детализация> v = new ArrayList<>( Arrays.asList( values() ) );
            Collections.reverse( v );
            for( Детализация детализация : v )
                if( уровень >= детализация.уровень )
                    return детализация;
            return НАЗВАНИЕ;
        }
    }
}
